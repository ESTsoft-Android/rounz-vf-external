apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'

android {
    compileSdkVersion compile_sdk_version

    defaultConfig {
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version

        versionCode version_code
        versionName version_name

        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Coroutines
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines"

    // AndroidX
    api(
            "androidx.core:core-ktx:$androidx_core_version",
            "androidx.appcompat:appcompat:$androidx_appcompat_version",
            "androidx.exifinterface:exifinterface:$androidx_exifinterface_version"
    )

    // Dagger
    api(
            "com.google.dagger:dagger:$dagger_version",
            "com.google.dagger:dagger-android:$dagger_version",
            "com.google.dagger:dagger-android-support:$dagger_version"
    )
    kapt(
            "com.google.dagger:dagger-compiler:$dagger_version",
            "com.google.dagger:dagger-android-processor:$dagger_version"
    )

    // Retrofit
    api(
            "com.squareup.retrofit2:retrofit:$retrofit_version",
            "com.squareup.retrofit2:converter-moshi:$retrofit_version",
            "com.squareup.okhttp3:logging-interceptor:4.4.0"
    )

    // Moshi
    api"com.squareup.moshi:moshi-kotlin:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    // GPUImage
    api "jp.co.cyberagent.android:gpuimage:$gpuimage_version"
}